name: Secure Laravel CI/CD

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-test-security:
    name: Build, Test, and Secure Laravel App
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout Code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup PHP environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, intl, pdo_mysql
          coverage: none

      # 3Ô∏è‚É£ Install PHP dependencies
      - name: Install PHP dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      # ‚úÖ 4Ô∏è‚É£ Create .env file dynamically from GitHub Secrets
      - name: Create environment file
        run: |
          echo "APP_NAME=kccwg" > .env
          echo "APP_ENV=local" >> .env
          echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_URL=http://localhost" >> .env

          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=kccwg" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=" >> .env

          echo "SESSION_DRIVER=database" >> .env
          echo "SESSION_LIFETIME=120" >> .env

          echo "MAIL_FROM_ADDRESS=solomonmarcos34@gmail.com" >> .env
          echo "MAIL_FROM_NAME='KCCWG Membership'" >> .env

          php artisan config:clear
          php artisan cache:clear

      # 5Ô∏è‚É£ Install Node dependencies (optional)
      - name: Install Node dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          fi

      # 6Ô∏è‚É£ Run PHPUnit tests
      - name: Run Laravel tests
        run: php artisan test

      # 7Ô∏è‚É£ Composer Security Audit
      - name: Check for PHP dependency vulnerabilities
        run: composer audit --locked

      # 8Ô∏è‚É£ NPM Audit (optional)
      - name: Check for npm vulnerabilities
        run: |
          if [ -f package.json ]; then
            npm audit --audit-level=moderate || true
          fi

      # 9Ô∏è‚É£ Static Code Analysis (PHPStan)
      - name: Run static code analysis
        run: |
          if [ -f vendor/bin/phpstan ]; then
            vendor/bin/phpstan analyse --no-progress
          else
            echo "PHPStan not installed, skipping analysis."
          fi

      # üîü Scan for secrets
      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@v3.66.2
        with:
          path: .
          base: HEAD~1
          head: HEAD
          fail: true

      # ‚úÖ Deployment Gate
      - name: Ready for deployment
        if: success()
        run: echo "‚úÖ All tests and security checks passed ‚Äî ready to deploy!"
